{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/felipecorredor/Documents/react-advanced/next-project/pages/users/[id].js\";\nimport React from 'react';\n\nconst User = ({\n  user\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  const users = await res.json(); // Get the paths we want to pre-render based on posts\n\n  const paths = users.map(user => ({\n    params: {\n      id: user.id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  // params contains the post `id`.\n  console.log(\"Params\", params); // If the route is like /posts/1, then params.id is 1\n\n  const res = await fetch(`https://jsonplaceholder.typicode.com/users/${params.id}`);\n  const user = await res.json(); // Pass post data to the page via props\n\n  return {\n    props: {\n      user\n    }\n  };\n}\nexport default User;","map":{"version":3,"sources":["/Users/felipecorredor/Documents/react-advanced/next-project/pages/users/[id].js"],"names":["React","User","user","name","getStaticPaths","res","fetch","users","json","paths","map","params","id","toString","fallback","getStaticProps","console","log","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,sBACE;AAAA,2BACE;AAAA,gBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAQA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMC,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB,CAHqC,CAKrC;;AACA,QAAMC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAWR,IAAD,KAAW;AACjCS,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAEV,IAAI,CAACU,EAAL,CAAQC,QAAR;AAAN;AADyB,GAAX,CAAV,CAAd;AAIA,SAAO;AAAEJ,IAAAA,KAAF;AAASK,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD;AAGD,OAAO,eAAeC,cAAf,CAA8B;AAAEJ,EAAAA;AAAF,CAA9B,EAA0C;AAC/C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,MAAtB,EAF+C,CAG/C;;AACA,QAAMN,GAAG,GAAG,MAAMC,KAAK,CAAE,8CAA6CK,MAAM,CAACC,EAAG,EAAzD,CAAvB;AACA,QAAMV,IAAI,GAAG,MAAMG,GAAG,CAACG,IAAJ,EAAnB,CAL+C,CAO/C;;AACA,SAAO;AAAEU,IAAAA,KAAK,EAAE;AAAEhB,MAAAA;AAAF;AAAT,GAAP;AACD;AAED,eAAeD,IAAf","sourcesContent":["import React from 'react'\n\nconst User = ({ user }) => {\n  return (\n    <div>\n      <h1>{user.name}</h1>\n    </div>\n  )\n}\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await fetch('https://jsonplaceholder.typicode.com/users')\n  const users = await res.json()\n\n  // Get the paths we want to pre-render based on posts\n  const paths = users.map((user) => ({\n    params: { id: user.id.toString() },\n  }))\n\n  return { paths, fallback: false }\n}\n\n\nexport async function getStaticProps({ params }) {\n  // params contains the post `id`.\n  console.log(\"Params\", params)\n  // If the route is like /posts/1, then params.id is 1\n  const res = await fetch(`https://jsonplaceholder.typicode.com/users/${params.id}`)\n  const user = await res.json()\n\n  // Pass post data to the page via props\n  return { props: { user } }\n}\n\nexport default User"]},"metadata":{},"sourceType":"module"}